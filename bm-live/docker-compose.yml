services:
  frontend:
    image: node:20-alpine
    container_name: frontend-dev
    working_dir: /app
    restart: unless-stopped
    environment:
      PORT: 8080
      CORS_ORIGIN: http://localhost:5173 # ← ここを 5173 に
      USER_DATABASE_URL: ${USER_DATABASE_URL}
      STATS_DATABASE_URL: ${STATS_DATABASE_URL}
      TZ: Asia/Tokyo
    volumes:
      - ./frontend:/app # ← フロントの実体
      - /app/node_modules # ← コンテナ側に node_modules を持つ
    # lockfile があれば npm ci、無ければ npm i。Viteは dev サーバなので 0.0.0.0/5173 で公開
    command: ["/bin/sh", "-lc", "([ -f package-lock.json ] && npm ci || npm i) && npm run dev -- --host 0.0.0.0 --port 5173"]
    ports:
      - "5173:5173"
    depends_on:
      server:
        condition: service_started

  db:
    image: postgres:15-alpine
    shm_size: 1gb
    container_name: postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: soccer_bm # 既定DB
      TZ: Asia/Tokyo
    ports:
      - "127.0.0.1:54320:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data # ← データ永続化（消さない限り残る）
      - ./db/init:/docker-entrypoint-initdb.d # ← 初回起動時に DB を自動作成
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d soccer_bm"]
      interval: 5s
      timeout: 3s
      retries: 20

  server:
    image: node:20-alpine
    restart: unless-stopped
    working_dir: /srv
    depends_on:
      db:
        condition: service_healthy
    environment:
      PORT: 8080
      CORS_ORIGIN: http://localhost:3000
      USER_DATABASE_URL: ${USER_DATABASE_URL}
      STATS_DATABASE_URL: ${STATS_DATABASE_URL}
      TZ: Asia/Tokyo
    volumes:
      - ./server:/srv
      - /srv/node_modules
    ports:
      - "8080:8080"
    env_file: ./server/.env
    command: ["/bin/sh", "-lc", "/srv/start.sh"] #改行コードの関係でstart.shを呼び出して修正

  # ブラウザ管理は pgAdmin4 を利用（phpMyAdmin は MySQL 用）
  pgadmin:
    image: dpage/pgadmin4:8
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminadmin
      PGADMIN_CONFIG_SERVER_MODE: "False"
      TZ: Asia/Tokyo
    ports:
      - "127.0.0.1:54330:80" # http://localhost:54330 でアクセス
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  pg_data: {}
  pgadmin_data: {}
