services:
  db:
    image: postgres:15-alpine
    container_name: postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: soccer_bm # ← ここは固定文字列でOK
      TZ: Asia/Tokyo
    ports:
      - "127.0.0.1:54320:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d soccer_bm"] # ← 変数参照しない形にして警告回避
      interval: 5s
      timeout: 3s
      retries: 10

  server:
    image: node:20-alpine
    restart: unless-stopped
    working_dir: /srv
    depends_on:
      db:
        condition: service_healthy
    environment:
      PORT: 8080
      CORS_ORIGIN: http://localhost:3000
      USER_DATABASE_URL: "postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/soccer_bm_user?schema=public"
      STATS_DATABASE_URL: "postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/soccer_bm?schema=public"
      TZ: Asia/Tokyo
    volumes:
      - ./server:/srv
      - /srv/node_modules
    ports:
      - "8080:8080"
    env_file: ./server/.env
    command: >
      sh -lc "
      npm install &&
      npx prisma generate --schema=prisma-user/schema.prisma &&
      npx prisma generate --schema=prisma-stats/schema.prisma &&
      npm run dev
      "

volumes:
  pg_data: {}
