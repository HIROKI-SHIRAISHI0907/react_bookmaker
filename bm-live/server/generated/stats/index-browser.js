
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Average_statistics_csv_tmp_dataScalarFieldEnum = {
  id: 'id',
  score: 'score',
  country: 'country',
  league: 'league',
  team: 'team',
  game_count: 'game_count',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Average_statistics_team_detail_dataScalarFieldEnum = {
  id: 'id',
  situation: 'situation',
  team: 'team',
  opposite_team: 'opposite_team',
  ha: 'ha',
  country: 'country',
  league: 'league',
  exp_stat: 'exp_stat',
  donation_stat: 'donation_stat',
  shoot_all_stat: 'shoot_all_stat',
  shoot_in_stat: 'shoot_in_stat',
  shoot_out_stat: 'shoot_out_stat',
  block_shoot_stat: 'block_shoot_stat',
  big_chance_stat: 'big_chance_stat',
  corner_stat: 'corner_stat',
  box_shoot_in_stat: 'box_shoot_in_stat',
  box_shoot_out_stat: 'box_shoot_out_stat',
  goal_post_stat: 'goal_post_stat',
  goal_head_stat: 'goal_head_stat',
  keeper_save_stat: 'keeper_save_stat',
  free_kick_stat: 'free_kick_stat',
  offside_stat: 'offside_stat',
  foul_stat: 'foul_stat',
  yellow_card_stat: 'yellow_card_stat',
  red_card_stat: 'red_card_stat',
  slow_in_stat: 'slow_in_stat',
  box_touch_stat: 'box_touch_stat',
  pass_count_stat: 'pass_count_stat',
  final_third_pass_count_stat: 'final_third_pass_count_stat',
  cross_count_stat: 'cross_count_stat',
  tackle_count_stat: 'tackle_count_stat',
  clear_count_stat: 'clear_count_stat',
  intercept_count_stat: 'intercept_count_stat',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Calc_correlationScalarFieldEnum = {
  id: 'id',
  file: 'file',
  country: 'country',
  league: 'league',
  home: 'home',
  away: 'away',
  score: 'score',
  chk_body: 'chk_body',
  home_exp_info: 'home_exp_info',
  away_exp_info: 'away_exp_info',
  home_in_goal_exp_info: 'home_in_goal_exp_info',
  away_in_goal_exp_info: 'away_in_goal_exp_info',
  home_donation_info: 'home_donation_info',
  away_donation_info: 'away_donation_info',
  home_shoot_all_info: 'home_shoot_all_info',
  away_shoot_all_info: 'away_shoot_all_info',
  home_shoot_in_info: 'home_shoot_in_info',
  away_shoot_in_info: 'away_shoot_in_info',
  home_shoot_out_info: 'home_shoot_out_info',
  away_shoot_out_info: 'away_shoot_out_info',
  home_block_shoot_info: 'home_block_shoot_info',
  away_block_shoot_info: 'away_block_shoot_info',
  home_big_chance_info: 'home_big_chance_info',
  away_big_chance_info: 'away_big_chance_info',
  home_corner_info: 'home_corner_info',
  away_corner_info: 'away_corner_info',
  home_box_shoot_in_info: 'home_box_shoot_in_info',
  away_box_shoot_in_info: 'away_box_shoot_in_info',
  home_box_shoot_out_info: 'home_box_shoot_out_info',
  away_box_shoot_out_info: 'away_box_shoot_out_info',
  home_goal_post_info: 'home_goal_post_info',
  away_goal_post_info: 'away_goal_post_info',
  home_goal_head_info: 'home_goal_head_info',
  away_goal_head_info: 'away_goal_head_info',
  home_keeper_save_info: 'home_keeper_save_info',
  away_keeper_save_info: 'away_keeper_save_info',
  home_free_kick_info: 'home_free_kick_info',
  away_free_kick_info: 'away_free_kick_info',
  home_offside_info: 'home_offside_info',
  away_offside_info: 'away_offside_info',
  home_foul_info: 'home_foul_info',
  away_foul_info: 'away_foul_info',
  home_yellow_card_info: 'home_yellow_card_info',
  away_yellow_card_info: 'away_yellow_card_info',
  home_red_card_info: 'home_red_card_info',
  away_red_card_info: 'away_red_card_info',
  home_slow_in_info: 'home_slow_in_info',
  away_slow_in_info: 'away_slow_in_info',
  home_box_touch_info: 'home_box_touch_info',
  away_box_touch_info: 'away_box_touch_info',
  home_pass_count_info_on_success_ratio: 'home_pass_count_info_on_success_ratio',
  home_pass_count_info_on_success_count: 'home_pass_count_info_on_success_count',
  home_pass_count_info_on_try_count: 'home_pass_count_info_on_try_count',
  away_pass_count_info_on_success_ratio: 'away_pass_count_info_on_success_ratio',
  away_pass_count_info_on_success_count: 'away_pass_count_info_on_success_count',
  away_pass_count_info_on_try_count: 'away_pass_count_info_on_try_count',
  home_final_third_pass_count_info_on_success_ratio: 'home_final_third_pass_count_info_on_success_ratio',
  home_final_third_pass_count_info_on_success_count: 'home_final_third_pass_count_info_on_success_count',
  home_final_third_pass_count_info_on_try_count: 'home_final_third_pass_count_info_on_try_count',
  away_final_third_pass_count_info_on_success_ratio: 'away_final_third_pass_count_info_on_success_ratio',
  away_final_third_pass_count_info_on_success_count: 'away_final_third_pass_count_info_on_success_count',
  away_final_third_pass_count_info_on_try_count: 'away_final_third_pass_count_info_on_try_count',
  home_cross_count_info_on_success_ratio: 'home_cross_count_info_on_success_ratio',
  home_cross_count_info_on_success_count: 'home_cross_count_info_on_success_count',
  home_cross_count_info_on_try_count: 'home_cross_count_info_on_try_count',
  away_cross_count_info_on_success_ratio: 'away_cross_count_info_on_success_ratio',
  away_cross_count_info_on_success_count: 'away_cross_count_info_on_success_count',
  away_cross_count_info_on_try_count: 'away_cross_count_info_on_try_count',
  home_tackle_count_info_on_success_ratio: 'home_tackle_count_info_on_success_ratio',
  home_tackle_count_info_on_success_count: 'home_tackle_count_info_on_success_count',
  home_tackle_count_info_on_try_count: 'home_tackle_count_info_on_try_count',
  away_tackle_count_info_on_success_ratio: 'away_tackle_count_info_on_success_ratio',
  away_tackle_count_info_on_success_count: 'away_tackle_count_info_on_success_count',
  away_tackle_count_info_on_try_count: 'away_tackle_count_info_on_try_count',
  home_clear_count_info: 'home_clear_count_info',
  away_clear_count_info: 'away_clear_count_info',
  home_intercept_count_info: 'home_intercept_count_info',
  away_intercept_count_info: 'away_intercept_count_info',
  logic_flg: 'logic_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Calc_correlation_rankingScalarFieldEnum = {
  id: 'id',
  country: 'country',
  league: 'league',
  home: 'home',
  away: 'away',
  score: 'score',
  chk_body: 'chk_body',
  rank_1th: 'rank_1th',
  rank_2th: 'rank_2th',
  rank_3th: 'rank_3th',
  rank_4th: 'rank_4th',
  rank_5th: 'rank_5th',
  rank_6th: 'rank_6th',
  rank_7th: 'rank_7th',
  rank_8th: 'rank_8th',
  rank_9th: 'rank_9th',
  rank_10th: 'rank_10th',
  rank_11th: 'rank_11th',
  rank_12th: 'rank_12th',
  rank_13th: 'rank_13th',
  rank_14th: 'rank_14th',
  rank_15th: 'rank_15th',
  rank_16th: 'rank_16th',
  rank_17th: 'rank_17th',
  rank_18th: 'rank_18th',
  rank_19th: 'rank_19th',
  rank_20th: 'rank_20th',
  rank_21th: 'rank_21th',
  rank_22th: 'rank_22th',
  rank_23th: 'rank_23th',
  rank_24th: 'rank_24th',
  rank_25th: 'rank_25th',
  rank_26th: 'rank_26th',
  rank_27th: 'rank_27th',
  rank_28th: 'rank_28th',
  rank_29th: 'rank_29th',
  rank_30th: 'rank_30th',
  rank_31th: 'rank_31th',
  rank_32th: 'rank_32th',
  rank_33th: 'rank_33th',
  rank_34th: 'rank_34th',
  rank_35th: 'rank_35th',
  rank_36th: 'rank_36th',
  rank_37th: 'rank_37th',
  rank_38th: 'rank_38th',
  rank_39th: 'rank_39th',
  rank_40th: 'rank_40th',
  rank_41th: 'rank_41th',
  rank_42th: 'rank_42th',
  rank_43th: 'rank_43th',
  rank_44th: 'rank_44th',
  rank_45th: 'rank_45th',
  rank_46th: 'rank_46th',
  rank_47th: 'rank_47th',
  rank_48th: 'rank_48th',
  rank_49th: 'rank_49th',
  rank_50th: 'rank_50th',
  rank_51th: 'rank_51th',
  rank_52th: 'rank_52th',
  rank_53th: 'rank_53th',
  rank_54th: 'rank_54th',
  rank_55th: 'rank_55th',
  rank_56th: 'rank_56th',
  rank_57th: 'rank_57th',
  rank_58th: 'rank_58th',
  rank_59th: 'rank_59th',
  rank_60th: 'rank_60th',
  rank_61th: 'rank_61th',
  rank_62th: 'rank_62th',
  rank_63th: 'rank_63th',
  rank_64th: 'rank_64th',
  rank_65th: 'rank_65th',
  rank_66th: 'rank_66th',
  rank_67th: 'rank_67th',
  rank_68th: 'rank_68th',
  rank_69th: 'rank_69th',
  rank_70th: 'rank_70th',
  rank_71th: 'rank_71th',
  rank_72th: 'rank_72th',
  rank_73th: 'rank_73th',
  rank_74th: 'rank_74th',
  logic_flg: 'logic_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Condition_result_dataScalarFieldEnum = {
  data_seq: 'data_seq',
  mail_target_count: 'mail_target_count',
  mail_anonymous_target_count: 'mail_anonymous_target_count',
  mail_target_success_count: 'mail_target_success_count',
  mail_target_fail_count: 'mail_target_fail_count',
  ex_mail_target_to_no_result_count: 'ex_mail_target_to_no_result_count',
  ex_no_fin_data_to_no_result_count: 'ex_no_fin_data_to_no_result_count',
  goal_delete: 'goal_delete',
  alter_target_mail_anonymous: 'alter_target_mail_anonymous',
  alter_target_mail_fail: 'alter_target_mail_fail',
  no_result_count: 'no_result_count',
  err_data: 'err_data',
  condition_data: 'condition_data',
  hash: 'hash',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Country_league_masterScalarFieldEnum = {
  id: 'id',
  country: 'country',
  league: 'league',
  team: 'team',
  link: 'link',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Country_league_season_masterScalarFieldEnum = {
  id: 'id',
  country: 'country',
  league: 'league',
  start_season_date: 'start_season_date',
  end_season_date: 'end_season_date',
  round: 'round',
  path: 'path',
  disp_valid_flg: 'disp_valid_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Country_league_summaryScalarFieldEnum = {
  id: 'id',
  country: 'country',
  league: 'league',
  data_count: 'data_count',
  csv_count: 'csv_count',
  logic_flg: 'logic_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.DataScalarFieldEnum = {
  seq: 'seq',
  condition_result_data_seq_id: 'condition_result_data_seq_id',
  data_category: 'data_category',
  times: 'times',
  home_rank: 'home_rank',
  home_team_name: 'home_team_name',
  home_score: 'home_score',
  away_rank: 'away_rank',
  away_team_name: 'away_team_name',
  away_score: 'away_score',
  home_exp: 'home_exp',
  away_exp: 'away_exp',
  home_in_goal_exp: 'home_in_goal_exp',
  away_in_goal_exp: 'away_in_goal_exp',
  home_donation: 'home_donation',
  away_donation: 'away_donation',
  home_shoot_all: 'home_shoot_all',
  away_shoot_all: 'away_shoot_all',
  home_shoot_in: 'home_shoot_in',
  away_shoot_in: 'away_shoot_in',
  home_shoot_out: 'home_shoot_out',
  away_shoot_out: 'away_shoot_out',
  home_block_shoot: 'home_block_shoot',
  away_block_shoot: 'away_block_shoot',
  home_big_chance: 'home_big_chance',
  away_big_chance: 'away_big_chance',
  home_corner: 'home_corner',
  away_corner: 'away_corner',
  home_box_shoot_in: 'home_box_shoot_in',
  away_box_shoot_in: 'away_box_shoot_in',
  home_box_shoot_out: 'home_box_shoot_out',
  away_box_shoot_out: 'away_box_shoot_out',
  home_goal_post: 'home_goal_post',
  away_goal_post: 'away_goal_post',
  home_goal_head: 'home_goal_head',
  away_goal_head: 'away_goal_head',
  home_keeper_save: 'home_keeper_save',
  away_keeper_save: 'away_keeper_save',
  home_free_kick: 'home_free_kick',
  away_free_kick: 'away_free_kick',
  home_offside: 'home_offside',
  away_offside: 'away_offside',
  home_foul: 'home_foul',
  away_foul: 'away_foul',
  home_yellow_card: 'home_yellow_card',
  away_yellow_card: 'away_yellow_card',
  home_red_card: 'home_red_card',
  away_red_card: 'away_red_card',
  home_slow_in: 'home_slow_in',
  away_slow_in: 'away_slow_in',
  home_box_touch: 'home_box_touch',
  away_box_touch: 'away_box_touch',
  home_pass_count: 'home_pass_count',
  away_pass_count: 'away_pass_count',
  home_long_pass_count: 'home_long_pass_count',
  away_long_pass_count: 'away_long_pass_count',
  home_final_third_pass_count: 'home_final_third_pass_count',
  away_final_third_pass_count: 'away_final_third_pass_count',
  home_cross_count: 'home_cross_count',
  away_cross_count: 'away_cross_count',
  home_tackle_count: 'home_tackle_count',
  away_tackle_count: 'away_tackle_count',
  home_clear_count: 'home_clear_count',
  away_clear_count: 'away_clear_count',
  home_duel_count: 'home_duel_count',
  away_duel_count: 'away_duel_count',
  home_intercept_count: 'home_intercept_count',
  away_intercept_count: 'away_intercept_count',
  record_time: 'record_time',
  weather: 'weather',
  temparature: 'temparature',
  humid: 'humid',
  judge_member: 'judge_member',
  home_manager: 'home_manager',
  away_manager: 'away_manager',
  home_formation: 'home_formation',
  away_formation: 'away_formation',
  studium: 'studium',
  capacity: 'capacity',
  audience: 'audience',
  home_max_getting_scorer: 'home_max_getting_scorer',
  away_max_getting_scorer: 'away_max_getting_scorer',
  home_max_getting_scorer_game_situation: 'home_max_getting_scorer_game_situation',
  away_max_getting_scorer_game_situation: 'away_max_getting_scorer_game_situation',
  home_team_home_score: 'home_team_home_score',
  home_team_home_lost: 'home_team_home_lost',
  away_team_home_score: 'away_team_home_score',
  away_team_home_lost: 'away_team_home_lost',
  home_team_away_score: 'home_team_away_score',
  home_team_away_lost: 'home_team_away_lost',
  away_team_away_score: 'away_team_away_score',
  away_team_away_lost: 'away_team_away_lost',
  notice_flg: 'notice_flg',
  goal_time: 'goal_time',
  goal_team_member: 'goal_team_member',
  judge: 'judge',
  home_team_style: 'home_team_style',
  away_team_style: 'away_team_style',
  probablity: 'probablity',
  prediction_score_time: 'prediction_score_time',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Each_team_score_based_feature_statsScalarFieldEnum = {
  id: 'id',
  situation: 'situation',
  score: 'score',
  country: 'country',
  league: 'league',
  team: 'team',
  home_exp_stat: 'home_exp_stat',
  away_exp_stat: 'away_exp_stat',
  home_in_goal_exp_stat: 'home_in_goal_exp_stat',
  away_in_goal_exp_stat: 'away_in_goal_exp_stat',
  home_donation_stat: 'home_donation_stat',
  away_donation_stat: 'away_donation_stat',
  home_shoot_all_stat: 'home_shoot_all_stat',
  away_shoot_all_stat: 'away_shoot_all_stat',
  home_shoot_in_stat: 'home_shoot_in_stat',
  away_shoot_in_stat: 'away_shoot_in_stat',
  home_shoot_out_stat: 'home_shoot_out_stat',
  away_shoot_out_stat: 'away_shoot_out_stat',
  home_block_shoot_stat: 'home_block_shoot_stat',
  away_block_shoot_stat: 'away_block_shoot_stat',
  home_big_chance_stat: 'home_big_chance_stat',
  away_big_chance_stat: 'away_big_chance_stat',
  home_corner_stat: 'home_corner_stat',
  away_corner_stat: 'away_corner_stat',
  home_box_shoot_in_stat: 'home_box_shoot_in_stat',
  away_box_shoot_in_stat: 'away_box_shoot_in_stat',
  home_box_shoot_out_stat: 'home_box_shoot_out_stat',
  away_box_shoot_out_stat: 'away_box_shoot_out_stat',
  home_goal_post_stat: 'home_goal_post_stat',
  away_goal_post_stat: 'away_goal_post_stat',
  home_goal_head_stat: 'home_goal_head_stat',
  away_goal_head_stat: 'away_goal_head_stat',
  home_keeper_save_stat: 'home_keeper_save_stat',
  away_keeper_save_stat: 'away_keeper_save_stat',
  home_free_kick_stat: 'home_free_kick_stat',
  away_free_kick_stat: 'away_free_kick_stat',
  home_offside_stat: 'home_offside_stat',
  away_offside_stat: 'away_offside_stat',
  home_foul_stat: 'home_foul_stat',
  away_foul_stat: 'away_foul_stat',
  home_yellow_card_stat: 'home_yellow_card_stat',
  away_yellow_card_stat: 'away_yellow_card_stat',
  home_red_card_stat: 'home_red_card_stat',
  away_red_card_stat: 'away_red_card_stat',
  home_slow_in_stat: 'home_slow_in_stat',
  away_slow_in_stat: 'away_slow_in_stat',
  home_box_touch_stat: 'home_box_touch_stat',
  away_box_touch_stat: 'away_box_touch_stat',
  home_pass_count_stat: 'home_pass_count_stat',
  away_pass_count_stat: 'away_pass_count_stat',
  home_long_pass_count_stat: 'home_long_pass_count_stat',
  away_long_pass_count_stat: 'away_long_pass_count_stat',
  home_final_third_pass_count_stat: 'home_final_third_pass_count_stat',
  away_final_third_pass_count_stat: 'away_final_third_pass_count_stat',
  home_cross_count_stat: 'home_cross_count_stat',
  away_cross_count_stat: 'away_cross_count_stat',
  home_tackle_count_stat: 'home_tackle_count_stat',
  away_tackle_count_stat: 'away_tackle_count_stat',
  home_clear_count_stat: 'home_clear_count_stat',
  away_clear_count_stat: 'away_clear_count_stat',
  home_duel_count_stat: 'home_duel_count_stat',
  away_duel_count_stat: 'away_duel_count_stat',
  home_intercept_count_stat: 'home_intercept_count_stat',
  away_intercept_count_stat: 'away_intercept_count_stat',
  logic_flg: 'logic_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Future_masterScalarFieldEnum = {
  seq: 'seq',
  game_team_category: 'game_team_category',
  future_time: 'future_time',
  home_rank: 'home_rank',
  away_rank: 'away_rank',
  home_team_name: 'home_team_name',
  away_team_name: 'away_team_name',
  home_max_getting_scorer: 'home_max_getting_scorer',
  away_max_getting_scorer: 'away_max_getting_scorer',
  home_team_home_score: 'home_team_home_score',
  home_team_home_lost: 'home_team_home_lost',
  away_team_home_score: 'away_team_home_score',
  away_team_home_lost: 'away_team_home_lost',
  home_team_away_score: 'home_team_away_score',
  home_team_away_lost: 'home_team_away_lost',
  away_team_away_score: 'away_team_away_score',
  away_team_away_lost: 'away_team_away_lost',
  game_link: 'game_link',
  data_time: 'data_time',
  start_flg: 'start_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.League_score_time_band_statsScalarFieldEnum = {
  id: 'id',
  country: 'country',
  league: 'league',
  sum_score_value: 'sum_score_value',
  time_range_area: 'time_range_area',
  target: 'target',
  search: 'search',
  ratio: 'ratio',
  logic_flg: 'logic_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.League_score_time_band_stats_split_scoreScalarFieldEnum = {
  id: 'id',
  country: 'country',
  league: 'league',
  home_score_value: 'home_score_value',
  away_score_value: 'away_score_value',
  home_time_range_area: 'home_time_range_area',
  away_time_range_area: 'away_time_range_area',
  target: 'target',
  search: 'search',
  ratio: 'ratio',
  logic_flg: 'logic_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Match_classification_resultScalarFieldEnum = {
  id: 'id',
  classify_mode: 'classify_mode',
  data_category: 'data_category',
  times: 'times',
  home_rank: 'home_rank',
  home_team_name: 'home_team_name',
  home_score: 'home_score',
  away_rank: 'away_rank',
  away_team_name: 'away_team_name',
  away_score: 'away_score',
  home_exp: 'home_exp',
  away_exp: 'away_exp',
  home_in_goal_exp: 'home_in_goal_exp',
  away_in_goal_exp: 'away_in_goal_exp',
  home_donation: 'home_donation',
  away_donation: 'away_donation',
  home_shoot_all: 'home_shoot_all',
  away_shoot_all: 'away_shoot_all',
  home_shoot_in: 'home_shoot_in',
  away_shoot_in: 'away_shoot_in',
  home_shoot_out: 'home_shoot_out',
  away_shoot_out: 'away_shoot_out',
  home_block_shoot: 'home_block_shoot',
  away_block_shoot: 'away_block_shoot',
  home_big_chance: 'home_big_chance',
  away_big_chance: 'away_big_chance',
  home_corner: 'home_corner',
  away_corner: 'away_corner',
  home_box_shoot_in: 'home_box_shoot_in',
  away_box_shoot_in: 'away_box_shoot_in',
  home_box_shoot_out: 'home_box_shoot_out',
  away_box_shoot_out: 'away_box_shoot_out',
  home_goal_post: 'home_goal_post',
  away_goal_post: 'away_goal_post',
  home_goal_head: 'home_goal_head',
  away_goal_head: 'away_goal_head',
  home_keeper_save: 'home_keeper_save',
  away_keeper_save: 'away_keeper_save',
  home_free_kick: 'home_free_kick',
  away_free_kick: 'away_free_kick',
  home_offside: 'home_offside',
  away_offside: 'away_offside',
  home_foul: 'home_foul',
  away_foul: 'away_foul',
  home_yellow_card: 'home_yellow_card',
  away_yellow_card: 'away_yellow_card',
  home_red_card: 'home_red_card',
  away_red_card: 'away_red_card',
  home_slow_in: 'home_slow_in',
  away_slow_in: 'away_slow_in',
  home_box_touch: 'home_box_touch',
  away_box_touch: 'away_box_touch',
  home_pass_count: 'home_pass_count',
  away_pass_count: 'away_pass_count',
  home_final_third_pass_count: 'home_final_third_pass_count',
  away_final_third_pass_count: 'away_final_third_pass_count',
  home_cross_count: 'home_cross_count',
  away_cross_count: 'away_cross_count',
  home_tackle_count: 'home_tackle_count',
  away_tackle_count: 'away_tackle_count',
  home_clear_count: 'home_clear_count',
  away_clear_count: 'away_clear_count',
  home_intercept_count: 'home_intercept_count',
  away_intercept_count: 'away_intercept_count',
  record_time: 'record_time',
  weather: 'weather',
  temparature: 'temparature',
  humid: 'humid',
  judge_member: 'judge_member',
  home_manager: 'home_manager',
  away_manager: 'away_manager',
  home_formation: 'home_formation',
  away_formation: 'away_formation',
  studium: 'studium',
  capacity: 'capacity',
  audience: 'audience',
  home_max_getting_scorer: 'home_max_getting_scorer',
  away_max_getting_scorer: 'away_max_getting_scorer',
  home_max_getting_scorer_game_situation: 'home_max_getting_scorer_game_situation',
  away_max_getting_scorer_game_situation: 'away_max_getting_scorer_game_situation',
  home_team_home_score: 'home_team_home_score',
  home_team_home_lost: 'home_team_home_lost',
  away_team_home_score: 'away_team_home_score',
  away_team_home_lost: 'away_team_home_lost',
  home_team_away_score: 'home_team_away_score',
  home_team_away_lost: 'home_team_away_lost',
  away_team_away_score: 'away_team_away_score',
  away_team_away_lost: 'away_team_away_lost',
  notice_flg: 'notice_flg',
  goal_time: 'goal_time',
  goal_team_member: 'goal_team_member',
  judge: 'judge',
  home_team_style: 'home_team_style',
  away_team_style: 'away_team_style',
  probablity: 'probablity',
  prediction_score_time: 'prediction_score_time',
  logic_flg: 'logic_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Match_classification_result_countScalarFieldEnum = {
  id: 'id',
  country: 'country',
  league: 'league',
  classify_mode: 'classify_mode',
  count: 'count',
  remarks: 'remarks',
  logic_flg: 'logic_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.No_goal_match_statsScalarFieldEnum = {
  id: 'id',
  seq: 'seq',
  data_category: 'data_category',
  times: 'times',
  home_rank: 'home_rank',
  home_team_name: 'home_team_name',
  home_score: 'home_score',
  away_rank: 'away_rank',
  away_team_name: 'away_team_name',
  away_score: 'away_score',
  home_exp: 'home_exp',
  away_exp: 'away_exp',
  home_in_goal_exp: 'home_in_goal_exp',
  away_in_goal_exp: 'away_in_goal_exp',
  home_donation: 'home_donation',
  away_donation: 'away_donation',
  home_shoot_all: 'home_shoot_all',
  away_shoot_all: 'away_shoot_all',
  home_shoot_in: 'home_shoot_in',
  away_shoot_in: 'away_shoot_in',
  home_shoot_out: 'home_shoot_out',
  away_shoot_out: 'away_shoot_out',
  home_block_shoot: 'home_block_shoot',
  away_block_shoot: 'away_block_shoot',
  home_big_chance: 'home_big_chance',
  away_big_chance: 'away_big_chance',
  home_corner: 'home_corner',
  away_corner: 'away_corner',
  home_box_shoot_in: 'home_box_shoot_in',
  away_box_shoot_in: 'away_box_shoot_in',
  home_box_shoot_out: 'home_box_shoot_out',
  away_box_shoot_out: 'away_box_shoot_out',
  home_goal_post: 'home_goal_post',
  away_goal_post: 'away_goal_post',
  home_goal_head: 'home_goal_head',
  away_goal_head: 'away_goal_head',
  home_keeper_save: 'home_keeper_save',
  away_keeper_save: 'away_keeper_save',
  home_free_kick: 'home_free_kick',
  away_free_kick: 'away_free_kick',
  home_offside: 'home_offside',
  away_offside: 'away_offside',
  home_foul: 'home_foul',
  away_foul: 'away_foul',
  home_yellow_card: 'home_yellow_card',
  away_yellow_card: 'away_yellow_card',
  home_red_card: 'home_red_card',
  away_red_card: 'away_red_card',
  home_slow_in: 'home_slow_in',
  away_slow_in: 'away_slow_in',
  home_box_touch: 'home_box_touch',
  away_box_touch: 'away_box_touch',
  home_pass_count: 'home_pass_count',
  away_pass_count: 'away_pass_count',
  home_long_pass_count: 'home_long_pass_count',
  away_long_pass_count: 'away_long_pass_count',
  home_final_third_pass_count: 'home_final_third_pass_count',
  away_final_third_pass_count: 'away_final_third_pass_count',
  home_cross_count: 'home_cross_count',
  away_cross_count: 'away_cross_count',
  home_tackle_count: 'home_tackle_count',
  away_tackle_count: 'away_tackle_count',
  home_clear_count: 'home_clear_count',
  away_clear_count: 'away_clear_count',
  home_duel_count: 'home_duel_count',
  away_duel_count: 'away_duel_count',
  home_intercept_count: 'home_intercept_count',
  away_intercept_count: 'away_intercept_count',
  record_time: 'record_time',
  weather: 'weather',
  temparature: 'temparature',
  humid: 'humid',
  judge_member: 'judge_member',
  home_manager: 'home_manager',
  away_manager: 'away_manager',
  home_formation: 'home_formation',
  away_formation: 'away_formation',
  studium: 'studium',
  capacity: 'capacity',
  audience: 'audience',
  home_max_getting_scorer: 'home_max_getting_scorer',
  away_max_getting_scorer: 'away_max_getting_scorer',
  home_max_getting_scorer_game_situation: 'home_max_getting_scorer_game_situation',
  away_max_getting_scorer_game_situation: 'away_max_getting_scorer_game_situation',
  home_team_home_score: 'home_team_home_score',
  home_team_home_lost: 'home_team_home_lost',
  away_team_home_score: 'away_team_home_score',
  away_team_home_lost: 'away_team_home_lost',
  home_team_away_score: 'home_team_away_score',
  home_team_away_lost: 'home_team_away_lost',
  away_team_away_score: 'away_team_away_score',
  away_team_away_lost: 'away_team_away_lost',
  notice_flg: 'notice_flg',
  goal_time: 'goal_time',
  goal_team_member: 'goal_team_member',
  judge: 'judge',
  home_team_style: 'home_team_style',
  away_team_style: 'away_team_style',
  probablity: 'probablity',
  prediction_score_time: 'prediction_score_time',
  logic_flg: 'logic_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Score_based_feature_statsScalarFieldEnum = {
  id: 'id',
  situation: 'situation',
  score: 'score',
  country: 'country',
  league: 'league',
  home_exp_stat: 'home_exp_stat',
  away_exp_stat: 'away_exp_stat',
  home_in_goal_exp_stat: 'home_in_goal_exp_stat',
  away_in_goal_exp_stat: 'away_in_goal_exp_stat',
  home_donation_stat: 'home_donation_stat',
  away_donation_stat: 'away_donation_stat',
  home_shoot_all_stat: 'home_shoot_all_stat',
  away_shoot_all_stat: 'away_shoot_all_stat',
  home_shoot_in_stat: 'home_shoot_in_stat',
  away_shoot_in_stat: 'away_shoot_in_stat',
  home_shoot_out_stat: 'home_shoot_out_stat',
  away_shoot_out_stat: 'away_shoot_out_stat',
  home_block_shoot_stat: 'home_block_shoot_stat',
  away_block_shoot_stat: 'away_block_shoot_stat',
  home_big_chance_stat: 'home_big_chance_stat',
  away_big_chance_stat: 'away_big_chance_stat',
  home_corner_stat: 'home_corner_stat',
  away_corner_stat: 'away_corner_stat',
  home_box_shoot_in_stat: 'home_box_shoot_in_stat',
  away_box_shoot_in_stat: 'away_box_shoot_in_stat',
  home_box_shoot_out_stat: 'home_box_shoot_out_stat',
  away_box_shoot_out_stat: 'away_box_shoot_out_stat',
  home_goal_post_stat: 'home_goal_post_stat',
  away_goal_post_stat: 'away_goal_post_stat',
  home_goal_head_stat: 'home_goal_head_stat',
  away_goal_head_stat: 'away_goal_head_stat',
  home_keeper_save_stat: 'home_keeper_save_stat',
  away_keeper_save_stat: 'away_keeper_save_stat',
  home_free_kick_stat: 'home_free_kick_stat',
  away_free_kick_stat: 'away_free_kick_stat',
  home_offside_stat: 'home_offside_stat',
  away_offside_stat: 'away_offside_stat',
  home_foul_stat: 'home_foul_stat',
  away_foul_stat: 'away_foul_stat',
  home_yellow_card_stat: 'home_yellow_card_stat',
  away_yellow_card_stat: 'away_yellow_card_stat',
  home_red_card_stat: 'home_red_card_stat',
  away_red_card_stat: 'away_red_card_stat',
  home_slow_in_stat: 'home_slow_in_stat',
  away_slow_in_stat: 'away_slow_in_stat',
  home_box_touch_stat: 'home_box_touch_stat',
  away_box_touch_stat: 'away_box_touch_stat',
  home_pass_count_stat: 'home_pass_count_stat',
  away_pass_count_stat: 'away_pass_count_stat',
  home_long_pass_count_stat: 'home_long_pass_count_stat',
  away_long_pass_count_stat: 'away_long_pass_count_stat',
  home_final_third_pass_count_stat: 'home_final_third_pass_count_stat',
  away_final_third_pass_count_stat: 'away_final_third_pass_count_stat',
  home_cross_count_stat: 'home_cross_count_stat',
  away_cross_count_stat: 'away_cross_count_stat',
  home_tackle_count_stat: 'home_tackle_count_stat',
  away_tackle_count_stat: 'away_tackle_count_stat',
  home_clear_count_stat: 'home_clear_count_stat',
  away_clear_count_stat: 'away_clear_count_stat',
  home_duel_count_stat: 'home_duel_count_stat',
  away_duel_count_stat: 'away_duel_count_stat',
  home_intercept_count_stat: 'home_intercept_count_stat',
  away_intercept_count_stat: 'away_intercept_count_stat',
  logic_flg: 'logic_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Scoring_playstyle_past_dataScalarFieldEnum = {
  id: 'id',
  data_category: 'data_category',
  home_team_name: 'home_team_name',
  away_team_name: 'away_team_name',
  diff_home_score: 'diff_home_score',
  diff_away_score: 'diff_away_score',
  diff_home_donation: 'diff_home_donation',
  diff_away_donation: 'diff_away_donation',
  diff_home_shoot_all: 'diff_home_shoot_all',
  diff_away_shoot_all: 'diff_away_shoot_all',
  diff_home_shoot_in: 'diff_home_shoot_in',
  diff_away_shoot_in: 'diff_away_shoot_in',
  diff_home_shoot_out: 'diff_home_shoot_out',
  diff_away_shoot_out: 'diff_away_shoot_out',
  diff_home_block_shoot: 'diff_home_block_shoot',
  diff_away_block_shoot: 'diff_away_block_shoot',
  diff_home_big_chance: 'diff_home_big_chance',
  diff_away_big_chance: 'diff_away_big_chance',
  diff_home_corner: 'diff_home_corner',
  diff_away_corner: 'diff_away_corner',
  diff_home_box_shoot_in: 'diff_home_box_shoot_in',
  diff_away_box_shoot_in: 'diff_away_box_shoot_in',
  diff_home_box_shoot_out: 'diff_home_box_shoot_out',
  diff_away_box_shoot_out: 'diff_away_box_shoot_out',
  diff_home_goal_post: 'diff_home_goal_post',
  diff_away_goal_post: 'diff_away_goal_post',
  diff_home_goal_head: 'diff_home_goal_head',
  diff_away_goal_head: 'diff_away_goal_head',
  diff_home_keeper_save: 'diff_home_keeper_save',
  diff_away_keeper_save: 'diff_away_keeper_save',
  diff_home_free_kick: 'diff_home_free_kick',
  diff_away_free_kick: 'diff_away_free_kick',
  diff_home_offside: 'diff_home_offside',
  diff_away_offside: 'diff_away_offside',
  diff_home_foul: 'diff_home_foul',
  diff_away_foul: 'diff_away_foul',
  diff_home_yellow_card: 'diff_home_yellow_card',
  diff_away_yellow_card: 'diff_away_yellow_card',
  diff_home_red_card: 'diff_home_red_card',
  diff_away_red_card: 'diff_away_red_card',
  diff_home_slow_in: 'diff_home_slow_in',
  diff_away_slow_in: 'diff_away_slow_in',
  diff_home_box_touch: 'diff_home_box_touch',
  diff_away_box_touch: 'diff_away_box_touch',
  diff_home_pass_count: 'diff_home_pass_count',
  diff_away_pass_count: 'diff_away_pass_count',
  diff_home_final_third_pass_count: 'diff_home_final_third_pass_count',
  diff_away_final_third_pass_count: 'diff_away_final_third_pass_count',
  diff_home_cross_count: 'diff_home_cross_count',
  diff_away_cross_count: 'diff_away_cross_count',
  diff_home_tackle_count: 'diff_home_tackle_count',
  diff_away_tackle_count: 'diff_away_tackle_count',
  diff_home_clear_count: 'diff_home_clear_count',
  diff_away_clear_count: 'diff_away_clear_count',
  diff_home_intercept_count: 'diff_home_intercept_count',
  diff_away_intercept_count: 'diff_away_intercept_count',
  home_play_style: 'home_play_style',
  away_play_style: 'away_play_style',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Stat_encryptionScalarFieldEnum = {
  id: 'id',
  country: 'country',
  league: 'league',
  home: 'home',
  away: 'away',
  team: 'team',
  chk_body: 'chk_body',
  home_exp_info: 'home_exp_info',
  away_exp_info: 'away_exp_info',
  home_in_goal_exp_info: 'home_in_goal_exp_info',
  away_in_goal_exp_info: 'away_in_goal_exp_info',
  home_donation_info: 'home_donation_info',
  away_donation_info: 'away_donation_info',
  home_shoot_all_info: 'home_shoot_all_info',
  away_shoot_all_info: 'away_shoot_all_info',
  home_shoot_in_info: 'home_shoot_in_info',
  away_shoot_in_info: 'away_shoot_in_info',
  home_shoot_out_info: 'home_shoot_out_info',
  away_shoot_out_info: 'away_shoot_out_info',
  home_block_shoot_info: 'home_block_shoot_info',
  away_block_shoot_info: 'away_block_shoot_info',
  home_big_chance_info: 'home_big_chance_info',
  away_big_chance_info: 'away_big_chance_info',
  home_corner_info: 'home_corner_info',
  away_corner_info: 'away_corner_info',
  home_box_shoot_in_info: 'home_box_shoot_in_info',
  away_box_shoot_in_info: 'away_box_shoot_in_info',
  home_box_shoot_out_info: 'home_box_shoot_out_info',
  away_box_shoot_out_info: 'away_box_shoot_out_info',
  home_goal_post_info: 'home_goal_post_info',
  away_goal_post_info: 'away_goal_post_info',
  home_goal_head_info: 'home_goal_head_info',
  away_goal_head_info: 'away_goal_head_info',
  home_keeper_save_info: 'home_keeper_save_info',
  away_keeper_save_info: 'away_keeper_save_info',
  home_free_kick_info: 'home_free_kick_info',
  away_free_kick_info: 'away_free_kick_info',
  home_offside_info: 'home_offside_info',
  away_offside_info: 'away_offside_info',
  home_foul_info: 'home_foul_info',
  away_foul_info: 'away_foul_info',
  home_yellow_card_info: 'home_yellow_card_info',
  away_yellow_card_info: 'away_yellow_card_info',
  home_red_card_info: 'home_red_card_info',
  away_red_card_info: 'away_red_card_info',
  home_slow_in_info: 'home_slow_in_info',
  away_slow_in_info: 'away_slow_in_info',
  home_box_touch_info: 'home_box_touch_info',
  away_box_touch_info: 'away_box_touch_info',
  home_pass_count_info_on_success_count: 'home_pass_count_info_on_success_count',
  away_pass_count_info_on_success_count: 'away_pass_count_info_on_success_count',
  home_long_pass_count_info_on_success_count: 'home_long_pass_count_info_on_success_count',
  away_long_pass_count_info_on_success_count: 'away_long_pass_count_info_on_success_count',
  home_final_third_pass_count_info_on_success_count: 'home_final_third_pass_count_info_on_success_count',
  away_final_third_pass_count_info_on_success_count: 'away_final_third_pass_count_info_on_success_count',
  home_cross_count_info_on_success_count: 'home_cross_count_info_on_success_count',
  away_cross_count_info_on_success_count: 'away_cross_count_info_on_success_count',
  home_tackle_count_info_on_success_count: 'home_tackle_count_info_on_success_count',
  away_tackle_count_info_on_success_count: 'away_tackle_count_info_on_success_count',
  home_clear_count_info: 'home_clear_count_info',
  away_clear_count_info: 'away_clear_count_info',
  home_duel_count_info: 'home_duel_count_info',
  away_duel_count_info: 'away_duel_count_info',
  home_intercept_count_info: 'home_intercept_count_info',
  away_intercept_count_info: 'away_intercept_count_info',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Stat_size_finalize_masterScalarFieldEnum = {
  id: 'id',
  option_num: 'option_num',
  options: 'options',
  flg: 'flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Surface_overviewScalarFieldEnum = {
  id: 'id',
  country: 'country',
  league: 'league',
  game_year: 'game_year',
  game_month: 'game_month',
  team: 'team',
  games: 'games',
  rank: 'rank',
  win: 'win',
  lose: 'lose',
  draw: 'draw',
  winning_points: 'winning_points',
  home_1st_half_score: 'home_1st_half_score',
  home_2nd_half_score: 'home_2nd_half_score',
  home_sum_score: 'home_sum_score',
  home_1st_half_score_ratio: 'home_1st_half_score_ratio',
  home_2nd_half_score_ratio: 'home_2nd_half_score_ratio',
  home_clean_sheet: 'home_clean_sheet',
  away_1st_half_score: 'away_1st_half_score',
  away_2nd_half_score: 'away_2nd_half_score',
  away_sum_score: 'away_sum_score',
  away_1st_half_score_ratio: 'away_1st_half_score_ratio',
  away_2nd_half_score_ratio: 'away_2nd_half_score_ratio',
  away_clean_sheet: 'away_clean_sheet',
  fail_to_score_game_count: 'fail_to_score_game_count',
  consecutive_win_disp: 'consecutive_win_disp',
  consecutive_lose_disp: 'consecutive_lose_disp',
  unbeaten_streak_count: 'unbeaten_streak_count',
  unbeaten_streak_disp: 'unbeaten_streak_disp',
  consecutive_score_count: 'consecutive_score_count',
  consecutive_score_count_disp: 'consecutive_score_count_disp',
  first_week_game_win_count: 'first_week_game_win_count',
  first_week_game_lost_count: 'first_week_game_lost_count',
  first_week_game_win_disp: 'first_week_game_win_disp',
  mid_week_game_win_count: 'mid_week_game_win_count',
  mid_week_game_lost_count: 'mid_week_game_lost_count',
  mid_week_game_win_disp: 'mid_week_game_win_disp',
  last_week_game_win_count: 'last_week_game_win_count',
  last_week_game_lost_count: 'last_week_game_lost_count',
  last_week_game_win_disp: 'last_week_game_win_disp',
  home_win_count: 'home_win_count',
  home_lose_count: 'home_lose_count',
  home_first_goal_count: 'home_first_goal_count',
  home_win_behind_count: 'home_win_behind_count',
  home_lose_behind_count: 'home_lose_behind_count',
  home_win_behind_0vs1_count: 'home_win_behind_0vs1_count',
  home_lose_behind_1vs0_count: 'home_lose_behind_1vs0_count',
  home_win_behind_0vs2_count: 'home_win_behind_0vs2_count',
  home_lose_behind_2vs0_count: 'home_lose_behind_2vs0_count',
  home_win_behind_other_count: 'home_win_behind_other_count',
  home_lose_behind_other_count: 'home_lose_behind_other_count',
  home_adversity_disp: 'home_adversity_disp',
  away_win_count: 'away_win_count',
  away_lose_count: 'away_lose_count',
  away_first_goal_count: 'away_first_goal_count',
  away_win_behind_count: 'away_win_behind_count',
  away_lose_behind_count: 'away_lose_behind_count',
  away_win_behind_1vs0_count: 'away_win_behind_1vs0_count',
  away_lose_behind_0vs1_count: 'away_lose_behind_0vs1_count',
  away_win_behind_2vs0_count: 'away_win_behind_2vs0_count',
  away_lose_behind_0vs2_count: 'away_lose_behind_0vs2_count',
  away_win_behind_other_count: 'away_win_behind_other_count',
  away_lose_behind_other_count: 'away_lose_behind_other_count',
  away_adversity_disp: 'away_adversity_disp',
  promote_disp: 'promote_disp',
  descend_disp: 'descend_disp',
  first_win_disp: 'first_win_disp',
  lose_streak_disp: 'lose_streak_disp',
  round_conc: 'round_conc',
  logic_flg: 'logic_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Team_match_final_statsScalarFieldEnum = {
  seq: 'seq',
  team_name: 'team_name',
  versus_team_name: 'versus_team_name',
  ha: 'ha',
  score: 'score',
  result: 'result',
  game_fin_rank: 'game_fin_rank',
  opposite_game_fin_rank: 'opposite_game_fin_rank',
  exp: 'exp',
  opposite_exp: 'opposite_exp',
  in_goal_exp: 'in_goal_exp',
  opposite_in_goal_exp: 'opposite_in_goal_exp',
  donation: 'donation',
  opposite_donation: 'opposite_donation',
  shoot_all: 'shoot_all',
  opposite_shoot_all: 'opposite_shoot_all',
  shoot_in: 'shoot_in',
  opposite_shoot_in: 'opposite_shoot_in',
  shoot_out: 'shoot_out',
  opposite_shoot_out: 'opposite_shoot_out',
  block_shoot: 'block_shoot',
  opposite_block_shoot: 'opposite_block_shoot',
  big_chance: 'big_chance',
  opposite_big_chance: 'opposite_big_chance',
  corner: 'corner',
  opposite_corner: 'opposite_corner',
  box_shoot_in: 'box_shoot_in',
  opposite_box_shoot_in: 'opposite_box_shoot_in',
  box_shoot_out: 'box_shoot_out',
  opposite_box_shoot_out: 'opposite_box_shoot_out',
  goal_post: 'goal_post',
  opposite_goal_post: 'opposite_goal_post',
  goal_head: 'goal_head',
  opposite_goal_head: 'opposite_goal_head',
  keeper_save: 'keeper_save',
  opposite_keeper_save: 'opposite_keeper_save',
  free_kick: 'free_kick',
  opposite_free_kick: 'opposite_free_kick',
  offside: 'offside',
  opposite_offside: 'opposite_offside',
  foul: 'foul',
  opposite_foul: 'opposite_foul',
  yellow_card: 'yellow_card',
  opposite_yellow_card: 'opposite_yellow_card',
  red_card: 'red_card',
  opposite_red_card: 'opposite_red_card',
  slow_in: 'slow_in',
  opposite_slow_in: 'opposite_slow_in',
  box_touch: 'box_touch',
  opposite_box_touch: 'opposite_box_touch',
  pass_count_success_ratio: 'pass_count_success_ratio',
  pass_count_success_count: 'pass_count_success_count',
  pass_count_try_count: 'pass_count_try_count',
  opposite_pass_count_success_ratio: 'opposite_pass_count_success_ratio',
  opposite_pass_count_success_count: 'opposite_pass_count_success_count',
  opposite_pass_count_try_count: 'opposite_pass_count_try_count',
  long_pass_count_success_ratio: 'long_pass_count_success_ratio',
  long_pass_count_success_count: 'long_pass_count_success_count',
  long_pass_count_try_count: 'long_pass_count_try_count',
  opposite_long_pass_count_success_ratio: 'opposite_long_pass_count_success_ratio',
  opposite_long_pass_count_success_count: 'opposite_long_pass_count_success_count',
  opposite_long_pass_count_try_count: 'opposite_long_pass_count_try_count',
  final_third_pass_count_success_ratio: 'final_third_pass_count_success_ratio',
  final_third_pass_count_success_count: 'final_third_pass_count_success_count',
  final_third_pass_count_try_count: 'final_third_pass_count_try_count',
  opposite_final_third_pass_count_success_ratio: 'opposite_final_third_pass_count_success_ratio',
  opposite_final_third_pass_count_success_count: 'opposite_final_third_pass_count_success_count',
  opposite_final_third_pass_count_try_count: 'opposite_final_third_pass_count_try_count',
  cross_count_success_ratio: 'cross_count_success_ratio',
  cross_count_success_count: 'cross_count_success_count',
  cross_count_try_count: 'cross_count_try_count',
  opposite_cross_count_success_ratio: 'opposite_cross_count_success_ratio',
  opposite_cross_count_success_count: 'opposite_cross_count_success_count',
  opposite_cross_count_try_count: 'opposite_cross_count_try_count',
  tackle_count_success_ratio: 'tackle_count_success_ratio',
  tackle_count_success_count: 'tackle_count_success_count',
  tackle_count_try_count: 'tackle_count_try_count',
  opposite_tackle_count_success_ratio: 'opposite_tackle_count_success_ratio',
  opposite_tackle_count_success_count: 'opposite_tackle_count_success_count',
  opposite_tackle_count_try_count: 'opposite_tackle_count_try_count',
  clear_count: 'clear_count',
  opposite_clear_count: 'opposite_clear_count',
  duel_count: 'duel_count',
  opposite_duel_count: 'opposite_duel_count',
  intercept_count: 'intercept_count',
  opposite_intercept_count: 'opposite_intercept_count',
  weather: 'weather',
  temperature: 'temperature',
  humid: 'humid',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Team_member_masterScalarFieldEnum = {
  id: 'id',
  country: 'country',
  league: 'league',
  team: 'team',
  score: 'score',
  loan_belong: 'loan_belong',
  jersey: 'jersey',
  member: 'member',
  face_pic_path: 'face_pic_path',
  belong_list: 'belong_list',
  height: 'height',
  weight: 'weight',
  position: 'position',
  birth: 'birth',
  age: 'age',
  market_value: 'market_value',
  injury: 'injury',
  versus_team_score_data: 'versus_team_score_data',
  retire_flg: 'retire_flg',
  deadline: 'deadline',
  deadline_contract_date: 'deadline_contract_date',
  latest_info_date: 'latest_info_date',
  upd_stamp: 'upd_stamp',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Team_monthly_score_summaryScalarFieldEnum = {
  seq: 'seq',
  country: 'country',
  league: 'league',
  team_name: 'team_name',
  ha: 'ha',
  year: 'year',
  jar_sum_score: 'jar_sum_score',
  feb_sum_score: 'feb_sum_score',
  mar_sum_score: 'mar_sum_score',
  apr_sum_score: 'apr_sum_score',
  may_sum_score: 'may_sum_score',
  jun_sum_score: 'jun_sum_score',
  jul_sum_score: 'jul_sum_score',
  aug_sum_score: 'aug_sum_score',
  sep_sum_score: 'sep_sum_score',
  oct_sum_score: 'oct_sum_score',
  nov_sum_score: 'nov_sum_score',
  dec_sum_score: 'dec_sum_score',
  logic_flg: 'logic_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Team_time_segment_shooting_statScalarFieldEnum = {
  id: 'id',
  data_category: 'data_category',
  team_name: 'team_name',
  away_team_name: 'away_team_name',
  team_0_10_mean_shoot_count: 'team_0_10_mean_shoot_count',
  team_11_20_mean_shoot_count: 'team_11_20_mean_shoot_count',
  team_21_30_mean_shoot_count: 'team_21_30_mean_shoot_count',
  team_31_40_mean_shoot_count: 'team_31_40_mean_shoot_count',
  team_41_45_mean_shoot_count: 'team_41_45_mean_shoot_count',
  team_46_50_mean_shoot_count: 'team_46_50_mean_shoot_count',
  team_51_60_mean_shoot_count: 'team_51_60_mean_shoot_count',
  team_61_70_mean_shoot_count: 'team_61_70_mean_shoot_count',
  team_71_80_mean_shoot_count: 'team_71_80_mean_shoot_count',
  team_81_90_mean_shoot_count: 'team_81_90_mean_shoot_count',
  team_addi_mean_shoot_count: 'team_addi_mean_shoot_count',
  team_0_10_mean_shoot_in_count: 'team_0_10_mean_shoot_in_count',
  team_11_20_mean_shoot_in_count: 'team_11_20_mean_shoot_in_count',
  team_21_30_mean_shoot_in_count: 'team_21_30_mean_shoot_in_count',
  team_31_40_mean_shoot_in_count: 'team_31_40_mean_shoot_in_count',
  team_41_45_mean_shoot_in_count: 'team_41_45_mean_shoot_in_count',
  team_46_50_mean_shoot_in_count: 'team_46_50_mean_shoot_in_count',
  team_51_60_mean_shoot_in_count: 'team_51_60_mean_shoot_in_count',
  team_61_70_mean_shoot_in_count: 'team_61_70_mean_shoot_in_count',
  team_71_80_mean_shoot_in_count: 'team_71_80_mean_shoot_in_count',
  team_81_90_mean_shoot_in_count: 'team_81_90_mean_shoot_in_count',
  team_addi_mean_shoot_in_count: 'team_addi_mean_shoot_in_count',
  team_0_10_mean_big_chance_count: 'team_0_10_mean_big_chance_count',
  team_11_20_mean_big_chance_count: 'team_11_20_mean_big_chance_count',
  team_21_30_mean_big_chance_count: 'team_21_30_mean_big_chance_count',
  team_31_40_mean_big_chance_count: 'team_31_40_mean_big_chance_count',
  team_41_45_mean_big_chance_count: 'team_41_45_mean_big_chance_count',
  team_46_50_mean_big_chance_count: 'team_46_50_mean_big_chance_count',
  team_51_60_mean_big_chance_count: 'team_51_60_mean_big_chance_count',
  team_61_70_mean_big_chance_count: 'team_61_70_mean_big_chance_count',
  team_71_80_mean_big_chance_count: 'team_71_80_mean_big_chance_count',
  team_81_90_mean_big_chance_count: 'team_81_90_mean_big_chance_count',
  team_addi_mean_big_chance_count: 'team_addi_mean_big_chance_count',
  team_0_10_mean_free_kick_count: 'team_0_10_mean_free_kick_count',
  team_11_20_mean_free_kick_count: 'team_11_20_mean_free_kick_count',
  team_21_30_mean_free_kick_count: 'team_21_30_mean_free_kick_count',
  team_31_40_mean_free_kick_count: 'team_31_40_mean_free_kick_count',
  team_41_45_mean_free_kick_count: 'team_41_45_mean_free_kick_count',
  team_46_50_mean_free_kick_count: 'team_46_50_mean_free_kick_count',
  team_51_60_mean_free_kick_count: 'team_51_60_mean_free_kick_count',
  team_61_70_mean_free_kick_count: 'team_61_70_mean_free_kick_count',
  team_71_80_mean_free_kick_count: 'team_71_80_mean_free_kick_count',
  team_81_90_mean_free_kick_count: 'team_81_90_mean_free_kick_count',
  team_addi_mean_free_kick_count: 'team_addi_mean_free_kick_count',
  team_0_10_mean_offside_count: 'team_0_10_mean_offside_count',
  team_11_20_mean_offside_count: 'team_11_20_mean_offside_count',
  team_21_30_mean_offside_count: 'team_21_30_mean_offside_count',
  team_31_40_mean_offside_count: 'team_31_40_mean_offside_count',
  team_41_45_mean_offside_count: 'team_41_45_mean_offside_count',
  team_46_50_mean_offside_count: 'team_46_50_mean_offside_count',
  team_51_60_mean_offside_count: 'team_51_60_mean_offside_count',
  team_61_70_mean_offside_count: 'team_61_70_mean_offside_count',
  team_71_80_mean_offside_count: 'team_71_80_mean_offside_count',
  team_81_90_mean_offside_count: 'team_81_90_mean_offside_count',
  team_addi_mean_offside_count: 'team_addi_mean_offside_count',
  team_0_10_mean_foul_count: 'team_0_10_mean_foul_count',
  team_11_20_mean_foul_count: 'team_11_20_mean_foul_count',
  team_21_30_mean_foul_count: 'team_21_30_mean_foul_count',
  team_31_40_mean_foul_count: 'team_31_40_mean_foul_count',
  team_41_45_mean_foul_count: 'team_41_45_mean_foul_count',
  team_46_50_mean_foul_count: 'team_46_50_mean_foul_count',
  team_51_60_mean_foul_count: 'team_51_60_mean_foul_count',
  team_61_70_mean_foul_count: 'team_61_70_mean_foul_count',
  team_71_80_mean_foul_count: 'team_71_80_mean_foul_count',
  team_81_90_mean_foul_count: 'team_81_90_mean_foul_count',
  team_addi_mean_foul_count: 'team_addi_mean_foul_count',
  team_0_10_mean_yellow_card_count: 'team_0_10_mean_yellow_card_count',
  team_11_20_mean_yellow_card_count: 'team_11_20_mean_yellow_card_count',
  team_21_30_mean_yellow_card_count: 'team_21_30_mean_yellow_card_count',
  team_31_40_mean_yellow_card_count: 'team_31_40_mean_yellow_card_count',
  team_41_45_mean_yellow_card_count: 'team_41_45_mean_yellow_card_count',
  team_46_50_mean_yellow_card_count: 'team_46_50_mean_yellow_card_count',
  team_51_60_mean_yellow_card_count: 'team_51_60_mean_yellow_card_count',
  team_61_70_mean_yellow_card_count: 'team_61_70_mean_yellow_card_count',
  team_71_80_mean_yellow_card_count: 'team_71_80_mean_yellow_card_count',
  team_81_90_mean_yellow_card_count: 'team_81_90_mean_yellow_card_count',
  team_addi_mean_yellow_card_count: 'team_addi_mean_yellow_card_count',
  team_0_10_mean_red_card_count: 'team_0_10_mean_red_card_count',
  team_11_20_mean_red_card_count: 'team_11_20_mean_red_card_count',
  team_21_30_mean_red_card_count: 'team_21_30_mean_red_card_count',
  team_31_40_mean_red_card_count: 'team_31_40_mean_red_card_count',
  team_41_45_mean_red_card_count: 'team_41_45_mean_red_card_count',
  team_46_50_mean_red_card_count: 'team_46_50_mean_red_card_count',
  team_51_60_mean_red_card_count: 'team_51_60_mean_red_card_count',
  team_61_70_mean_red_card_count: 'team_61_70_mean_red_card_count',
  team_71_80_mean_red_card_count: 'team_71_80_mean_red_card_count',
  team_81_90_mean_red_card_count: 'team_81_90_mean_red_card_count',
  team_addi_mean_red_card_count: 'team_addi_mean_red_card_count',
  logic_flg: 'logic_flg',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Within_dataScalarFieldEnum = {
  id: 'id',
  seq: 'seq',
  time_range_feature_id: 'time_range_feature_id',
  data_category: 'data_category',
  times: 'times',
  home_rank: 'home_rank',
  home_team_name: 'home_team_name',
  home_score: 'home_score',
  away_rank: 'away_rank',
  away_team_name: 'away_team_name',
  away_score: 'away_score',
  home_exp: 'home_exp',
  away_exp: 'away_exp',
  home_donation: 'home_donation',
  away_donation: 'away_donation',
  home_shoot_all: 'home_shoot_all',
  away_shoot_all: 'away_shoot_all',
  home_shoot_in: 'home_shoot_in',
  away_shoot_in: 'away_shoot_in',
  home_shoot_out: 'home_shoot_out',
  away_shoot_out: 'away_shoot_out',
  home_block_shoot: 'home_block_shoot',
  away_block_shoot: 'away_block_shoot',
  home_big_chance: 'home_big_chance',
  away_big_chance: 'away_big_chance',
  home_corner: 'home_corner',
  away_corner: 'away_corner',
  home_box_shoot_in: 'home_box_shoot_in',
  away_box_shoot_in: 'away_box_shoot_in',
  home_box_shoot_out: 'home_box_shoot_out',
  away_box_shoot_out: 'away_box_shoot_out',
  home_goal_post: 'home_goal_post',
  away_goal_post: 'away_goal_post',
  home_goal_head: 'home_goal_head',
  away_goal_head: 'away_goal_head',
  home_keeper_save: 'home_keeper_save',
  away_keeper_save: 'away_keeper_save',
  home_free_kick: 'home_free_kick',
  away_free_kick: 'away_free_kick',
  home_offside: 'home_offside',
  away_offside: 'away_offside',
  home_foul: 'home_foul',
  away_foul: 'away_foul',
  home_yellow_card: 'home_yellow_card',
  away_yellow_card: 'away_yellow_card',
  home_red_card: 'home_red_card',
  away_red_card: 'away_red_card',
  home_slow_in: 'home_slow_in',
  away_slow_in: 'away_slow_in',
  home_box_touch: 'home_box_touch',
  away_box_touch: 'away_box_touch',
  home_pass_count: 'home_pass_count',
  away_pass_count: 'away_pass_count',
  home_long_pass_count: 'home_long_pass_count',
  away_long_pass_count: 'away_long_pass_count',
  home_final_third_pass_count: 'home_final_third_pass_count',
  away_final_third_pass_count: 'away_final_third_pass_count',
  home_cross_count: 'home_cross_count',
  away_cross_count: 'away_cross_count',
  home_tackle_count: 'home_tackle_count',
  away_tackle_count: 'away_tackle_count',
  home_clear_count: 'home_clear_count',
  away_clear_count: 'away_clear_count',
  home_duel_count: 'home_duel_count',
  away_duel_count: 'away_duel_count',
  home_intercept_count: 'home_intercept_count',
  away_intercept_count: 'away_intercept_count',
  record_time: 'record_time',
  weather: 'weather',
  temparature: 'temparature',
  humid: 'humid',
  judge_member: 'judge_member',
  home_manager: 'home_manager',
  away_manager: 'away_manager',
  home_formation: 'home_formation',
  away_formation: 'away_formation',
  studium: 'studium',
  capacity: 'capacity',
  audience: 'audience',
  home_max_getting_scorer: 'home_max_getting_scorer',
  away_max_getting_scorer: 'away_max_getting_scorer',
  home_max_getting_scorer_game_situation: 'home_max_getting_scorer_game_situation',
  away_max_getting_scorer_game_situation: 'away_max_getting_scorer_game_situation',
  home_team_home_score: 'home_team_home_score',
  home_team_home_lost: 'home_team_home_lost',
  away_team_home_score: 'away_team_home_score',
  away_team_home_lost: 'away_team_home_lost',
  home_team_away_score: 'home_team_away_score',
  home_team_away_lost: 'home_team_away_lost',
  away_team_away_score: 'away_team_away_score',
  away_team_away_lost: 'away_team_away_lost',
  notice_flg: 'notice_flg',
  goal_time: 'goal_time',
  goal_team_member: 'goal_team_member',
  judge: 'judge',
  home_team_style: 'home_team_style',
  away_team_style: 'away_team_style',
  probablity: 'probablity',
  prediction_score_time: 'prediction_score_time',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Within_data_20minutes_away_all_leagueScalarFieldEnum = {
  id: 'id',
  time_range: 'time_range',
  feature: 'feature',
  threshold: 'threshold',
  target: 'target',
  search: 'search',
  ratio: 'ratio',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Within_data_20minutes_away_scoredScalarFieldEnum = {
  id: 'id',
  country: 'country',
  category: 'category',
  time_range: 'time_range',
  feature: 'feature',
  threshold: 'threshold',
  target: 'target',
  search: 'search',
  ratio: 'ratio',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Within_data_20minutes_home_all_leagueScalarFieldEnum = {
  id: 'id',
  time_range: 'time_range',
  feature: 'feature',
  threshold: 'threshold',
  target: 'target',
  search: 'search',
  ratio: 'ratio',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Within_data_20minutes_home_scoredScalarFieldEnum = {
  id: 'id',
  country: 'country',
  category: 'category',
  time_range: 'time_range',
  feature: 'feature',
  threshold: 'threshold',
  target: 'target',
  search: 'search',
  ratio: 'ratio',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Within_data_20minutes_same_scoredScalarFieldEnum = {
  id: 'id',
  country: 'country',
  category: 'category',
  time_range: 'time_range',
  feature: 'feature',
  threshold: 'threshold',
  target: 'target',
  search: 'search',
  ratio: 'ratio',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Within_data_45minutes_away_all_leagueScalarFieldEnum = {
  id: 'id',
  time_range: 'time_range',
  feature: 'feature',
  threshold: 'threshold',
  target: 'target',
  search: 'search',
  ratio: 'ratio',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Within_data_45minutes_away_scoredScalarFieldEnum = {
  id: 'id',
  country: 'country',
  category: 'category',
  time_range: 'time_range',
  feature: 'feature',
  threshold: 'threshold',
  target: 'target',
  search: 'search',
  ratio: 'ratio',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Within_data_45minutes_home_all_leagueScalarFieldEnum = {
  id: 'id',
  time_range: 'time_range',
  feature: 'feature',
  threshold: 'threshold',
  target: 'target',
  search: 'search',
  ratio: 'ratio',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Within_data_45minutes_home_scoredScalarFieldEnum = {
  id: 'id',
  country: 'country',
  category: 'category',
  time_range: 'time_range',
  feature: 'feature',
  threshold: 'threshold',
  target: 'target',
  search: 'search',
  ratio: 'ratio',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.Country_league_visibilityScalarFieldEnum = {
  id: 'id',
  country: 'country',
  league: 'league',
  visible: 'visible',
  priority: 'priority',
  reason: 'reason',
  effectiveFrom: 'effectiveFrom',
  effectiveTo: 'effectiveTo',
  optionId: 'optionId',
  register_id: 'register_id',
  register_time: 'register_time',
  update_id: 'update_id',
  update_time: 'update_time'
};

exports.Prisma.User_visibility_optionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  optionId: 'optionId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  average_statistics_csv_tmp_data: 'average_statistics_csv_tmp_data',
  average_statistics_team_detail_data: 'average_statistics_team_detail_data',
  calc_correlation: 'calc_correlation',
  calc_correlation_ranking: 'calc_correlation_ranking',
  condition_result_data: 'condition_result_data',
  country_league_master: 'country_league_master',
  country_league_season_master: 'country_league_season_master',
  country_league_summary: 'country_league_summary',
  data: 'data',
  each_team_score_based_feature_stats: 'each_team_score_based_feature_stats',
  future_master: 'future_master',
  league_score_time_band_stats: 'league_score_time_band_stats',
  league_score_time_band_stats_split_score: 'league_score_time_band_stats_split_score',
  match_classification_result: 'match_classification_result',
  match_classification_result_count: 'match_classification_result_count',
  no_goal_match_stats: 'no_goal_match_stats',
  score_based_feature_stats: 'score_based_feature_stats',
  scoring_playstyle_past_data: 'scoring_playstyle_past_data',
  stat_encryption: 'stat_encryption',
  stat_size_finalize_master: 'stat_size_finalize_master',
  surface_overview: 'surface_overview',
  team_match_final_stats: 'team_match_final_stats',
  team_member_master: 'team_member_master',
  team_monthly_score_summary: 'team_monthly_score_summary',
  team_time_segment_shooting_stat: 'team_time_segment_shooting_stat',
  within_data: 'within_data',
  within_data_20minutes_away_all_league: 'within_data_20minutes_away_all_league',
  within_data_20minutes_away_scored: 'within_data_20minutes_away_scored',
  within_data_20minutes_home_all_league: 'within_data_20minutes_home_all_league',
  within_data_20minutes_home_scored: 'within_data_20minutes_home_scored',
  within_data_20minutes_same_scored: 'within_data_20minutes_same_scored',
  within_data_45minutes_away_all_league: 'within_data_45minutes_away_all_league',
  within_data_45minutes_away_scored: 'within_data_45minutes_away_scored',
  within_data_45minutes_home_all_league: 'within_data_45minutes_home_all_league',
  within_data_45minutes_home_scored: 'within_data_45minutes_home_scored',
  country_league_visibility: 'country_league_visibility',
  user_visibility_option: 'user_visibility_option'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
